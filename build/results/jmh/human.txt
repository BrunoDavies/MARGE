# JMH version: 1.25
# VM version: JDK 15.0.6, OpenJDK 64-Bit Server VM, 15.0.6+5-MTS
# VM invoker: /home/bruno/.jdks/azul-15.0.6/bin/java
# VM options: -Dfile.encoding=UTF-8 -Djava.io.tmpdir=/home/bruno/IdeaProjects/rggTool/build/tmp/jmh -Duser.country=GB -Duser.language=en -Duser.variant
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: me.champeau.jmh.SampleBenchmark.fibClassic

# Run progress: 0.00% complete, ETA 00:02:20
# Fork: 1 of 1
# Warmup Iteration   1: 266110036.714 ops/s
# Warmup Iteration   2: 260788396.599 ops/s
Iteration   1: 348646683.305 ops/s
Iteration   2: 330928830.683 ops/s
Iteration   3: 348553373.970 ops/s
Iteration   4: 339524246.914 ops/s
Iteration   5: 347679334.316 ops/s


Result "me.champeau.jmh.SampleBenchmark.fibClassic":
  343066493.838 ±(99.9%) 29975293.420 ops/s [Average]
  (min, avg, max) = (330928830.683, 343066493.838, 348646683.305), stdev = 7784488.510
  CI (99.9%): [313091200.418, 373041787.257] (assumes normal distribution)


# JMH version: 1.25
# VM version: JDK 15.0.6, OpenJDK 64-Bit Server VM, 15.0.6+5-MTS
# VM invoker: /home/bruno/.jdks/azul-15.0.6/bin/java
# VM options: -Dfile.encoding=UTF-8 -Djava.io.tmpdir=/home/bruno/IdeaProjects/rggTool/build/tmp/jmh -Duser.country=GB -Duser.language=en -Duser.variant
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: me.champeau.jmh.SampleBenchmark.fibTailRec

# Run progress: 50.00% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: 276162981.836 ops/s
# Warmup Iteration   2: 258003484.503 ops/s
Iteration   1: 329796318.817 ops/s
Iteration   2: 323346438.841 ops/s
Iteration   3: 338377984.425 ops/s
Iteration   4: 304488851.043 ops/s
Iteration   5: 343298320.941 ops/s


Result "me.champeau.jmh.SampleBenchmark.fibTailRec":
  327861582.813 ±(99.9%) 58375746.266 ops/s [Average]
  (min, avg, max) = (304488851.043, 327861582.813, 343298320.941), stdev = 15159995.925
  CI (99.9%): [269485836.548, 386237329.079] (assumes normal distribution)


# Run complete. Total time: 00:02:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                    Mode  Cnt          Score          Error  Units
SampleBenchmark.fibClassic  thrpt    5  343066493.838 ± 29975293.420  ops/s
SampleBenchmark.fibTailRec  thrpt    5  327861582.813 ± 58375746.266  ops/s

Benchmark result is saved to /home/bruno/IdeaProjects/rggTool/build/results/jmh/results.txt
